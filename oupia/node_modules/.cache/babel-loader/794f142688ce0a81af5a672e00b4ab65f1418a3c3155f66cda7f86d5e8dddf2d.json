{"ast":null,"code":"var _jsxFileName = \"/home/genji/Documents/Oupia/OupiaFrontend/oupia/src/components/AreaForm/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Label, Select } from 'flowbite-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AreaForm = () => {\n  _s();\n  const [provinces, setProvince] = useState([]);\n  const [provinceId, setProvinceId] = useState('');\n  const [districts, setDistrict] = useState([]);\n  const [districtId, setDistrictId] = useState('');\n  const [wards, setWard] = useState([]);\n  useEffect(() => {\n    const getProvince = async () => {\n      try {\n        const res = await axios.get(\"https://provinces.open-api.vn/api/?depth=1\");\n        console.log(res.data);\n        setProvince(res.data);\n      } catch (ex) {\n        console.error('Error fetching provinces: ', ex);\n      }\n    };\n    getProvince();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md\",\n        id: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 block\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"province\",\n            className: \"block font-bold mb-1\",\n            children: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"province\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"\",\n            children: \"Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), provinces.map((resProvince, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: resProvince.code,\n            children: resProvince.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AreaForm, \"b7HqjJqnNbIqr6E64iHFbL7KxU8=\");\n_c = AreaForm;\nexport default AreaForm;\nvar _c;\n$RefreshReg$(_c, \"AreaForm\");","map":{"version":3,"names":["React","useEffect","useState","Label","Select","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AreaForm","_s","provinces","setProvince","provinceId","setProvinceId","districts","setDistrict","districtId","setDistrictId","wards","setWard","getProvince","res","get","console","log","data","ex","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","htmlFor","required","selected","value","map","resProvince","index","code","name","_c","$RefreshReg$"],"sources":["/home/genji/Documents/Oupia/OupiaFrontend/oupia/src/components/AreaForm/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Label, Select } from 'flowbite-react';\nimport axios from 'axios';\n\nconst AreaForm = () => {\n    const [provinces, setProvince] = useState([]);\n    const [provinceId, setProvinceId] = useState('');\n    const [districts, setDistrict] = useState([]);\n    const [districtId, setDistrictId] = useState('');\n    const [wards, setWard] = useState([]);\n\n    useEffect(() => {\n        const getProvince = async () => {\n            try {\n                const res = await axios.get(\"https://provinces.open-api.vn/api/?depth=1\");\n                console.log(res.data);\n\n                setProvince(res.data);\n            } catch (ex) {\n                console.error('Error fetching provinces: ', ex);\n            }\n        }\n        getProvince();\n    }, []);\n\n    return (\n        <>\n            <h2></h2>\n            <div className=\"grid grid-cols-2 gap-5\">\n                <div className=\"max-w-md\" id=\"select\">\n                    <div className=\"mb-2 block\">\n                        <Label htmlFor=\"province\" className=\"block font-bold mb-1\">\n                            Tỉnh/Thành phố\n                        </Label>\n                    </div>\n                    <Select id=\"province\" required >\n                        <option selected value=\"\">\n                            Chọn tỉnh/thành phố\n                        </option>\n                        {provinces.map((resProvince, index) => (\n                            <option key={index} value={resProvince.code}>\n                                {resProvince.name}\n                            </option>\n                        ))}\n                    </Select>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AreaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}