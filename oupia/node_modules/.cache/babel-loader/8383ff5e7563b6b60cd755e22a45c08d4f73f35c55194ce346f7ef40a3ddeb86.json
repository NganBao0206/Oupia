{"ast":null,"code":"var _jsxFileName = \"/home/genji/Documents/Oupia/OupiaFrontend/oupia/src/components/AreaForm/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Label, Select } from 'flowbite-react';\nimport axios from 'axios';\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AreaForm = () => {\n  _s();\n  const [provs, setProvs] = useState([]);\n  const [dists, setDists] = useState([]);\n  useEffect(() => {\n    const getProvince = async () => {\n      try {\n        const res = await axios.get(\"https://provinces.open-api.vn/api/?depth=1\");\n        const resProv = await res.data;\n        setProvs(resProv);\n      } catch (ex) {\n        console.error('Error fetching provinces: ', ex);\n      }\n    };\n    getProvince();\n  }, []);\n  useEffect(() => {\n    const getDistrict = async () => {\n      try {\n        const res = await axios.get(`https://provinces.open-api.vn/api/p/${provs.code}?depth=2`);\n        const resDist = await res.data.districts;\n        setDists(resDist);\n      } catch (ex) {\n        console.error('Error fetching provinces: ', ex);\n      }\n    };\n    getDistrict();\n  }, [provs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl\",\n      children: \" Th\\xF4ng tin khu v\\u1EF1c \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md\",\n        id: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 block\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"province\",\n            className: \"block font-bold mb-1\",\n            children: \"T\\u1EC9nh/Th\\xE0nh ph\\u1ED1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"province\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"\",\n            children: \"--Ch\\u1ECDn t\\u1EC9nh/th\\xE0nh ph\\u1ED1--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), provs.map((resProv, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: resProv.code,\n            children: resProv.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md\",\n        id: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 block\",\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"province\",\n            className: \"block font-bold mb-1\",\n            children: \"Qu\\u1EADn/Huy\\u1EC7n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"province\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: \"\",\n            children: \"--Ch\\u1ECDn qu\\u1EADn/huy\\u1EC7n --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), dists.map((resDist, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: resDist.code,\n            children: resDist.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AreaForm, \"64l8227yofs1l0YsPNlOWAGEnjM=\");\n_c = AreaForm;\nexport default AreaForm;\nvar _c;\n$RefreshReg$(_c, \"AreaForm\");","map":{"version":3,"names":["React","useEffect","useState","Label","Select","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AreaForm","_s","provs","setProvs","dists","setDists","getProvince","res","get","resProv","data","ex","console","error","getDistrict","code","resDist","districts","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","required","selected","value","map","index","name","_c","$RefreshReg$"],"sources":["/home/genji/Documents/Oupia/OupiaFrontend/oupia/src/components/AreaForm/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Label, Select } from 'flowbite-react';\nimport axios from 'axios';\nimport \"./style.scss\";\n\nconst AreaForm = () => {\n    const [provs, setProvs] = useState([]);\n    const [dists, setDists] = useState([]);\n\n\n    useEffect(() => {\n        const getProvince = async () => {\n            try {\n                const res = await axios.get(\"https://provinces.open-api.vn/api/?depth=1\");\n                const resProv = await res.data;\n                setProvs(resProv);\n            } catch (ex) {\n                console.error('Error fetching provinces: ', ex);\n            }\n        }\n        getProvince();\n    }, []);\n\n    useEffect(() => {\n        const getDistrict = async () => {\n            try {\n                const res = await axios.get(`https://provinces.open-api.vn/api/p/${provs.code}?depth=2`);\n                const resDist = await res.data.districts\n                setDists(resDist);\n            } catch (ex) {\n                console.error('Error fetching provinces: ', ex);\n            }\n        }\n        getDistrict()\n    }, [provs]);\n\n    return (\n        <>\n            <h2 className=\"text-2xl\"> Thông tin khu vực </h2>\n            <div className=\"grid grid-cols-2 gap-5\">\n                <div className=\"max-w-md\" id=\"select\">\n                    <div className=\"mb-2 block\">\n                        <Label htmlFor=\"province\" className=\"block font-bold mb-1\">\n                            Tỉnh/Thành phố\n                        </Label>\n                    </div>\n                    <Select id=\"province\" required >\n                        <option selected value=\"\">\n                            --Chọn tỉnh/thành phố--\n                        </option>\n                        {provs.map((resProv, index) => (\n                            <option key={index} value={resProv.code}>\n                                {resProv.name}\n                            </option>\n                        ))}\n                    </Select>\n                </div>\n                <div className=\"max-w-md\" id=\"select\">\n                    <div className=\"mb-2 block\">\n                        <Label htmlFor=\"province\" className=\"block font-bold mb-1\">\n                            Quận/Huyện\n                        </Label>\n                    </div>\n                    <Select id=\"province\" required >\n                        <option selected value=\"\">\n                            --Chọn quận/huyện -- \n                        </option>\n                        {dists.map((resDist, index) => (\n                            <option key={index} value={resDist.code}>\n                                {resDist.name}\n                            </option>\n                        ))}\n                    </Select>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AreaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}